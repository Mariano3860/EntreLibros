{
  "openapi": "3.0.0",
  "info": {
    "title": "EntreLibros API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered"
          },
          "400": {
            "description": "Bad Request - One of the following errors occurred",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "MissingFields"
                        },
                        "message": {
                          "type": "string",
                          "example": "auth.errors.missing_fields"
                        }
                      },
                      "description": "Required fields are missing from the request body."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "InvalidEmail"
                        },
                        "message": {
                          "type": "string",
                          "example": "auth.errors.invalid_email"
                        }
                      },
                      "description": "The email provided is not valid."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "WeakPassword"
                        },
                        "message": {
                          "type": "string",
                          "example": "auth.errors.weak_password"
                        }
                      },
                      "description": "The password does not meet complexity requirements."
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "EmailExists"
                    },
                    "message": {
                      "type": "string",
                      "example": "auth.errors.email_exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Log in a user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login.\nSets an `httpOnly` `sessionToken` cookie used for authentication.\nClients should rely on this cookie for subsequent requests.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["user", "message"],
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "description": "sessionToken cookie containing the JWT"
              }
            }
          },
          "400": {
            "description": "The request is invalid due to missing required fields or invalid email format.",
            "content": {
              "application/json": {
                "examples": {
                  "missingFields": {
                    "summary": "Missing required fields",
                    "value": {
                      "error": "MissingFields",
                      "message": "auth.errors.missing_fields"
                    }
                  },
                  "invalidEmail": {
                    "summary": "Invalid email format",
                    "value": {
                      "error": "InvalidEmail",
                      "message": "auth.errors.invalid_email"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["error", "message"],
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "invalidCredentials": {
                    "summary": "Invalid credentials",
                    "value": {
                      "error": "InvalidCredentials",
                      "message": "auth.errors.invalid_credentials"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Log out the current user",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "User logged out. Clears the session cookie.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "description": "Clears the sessionToken cookie"
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/api/books": {
      "get": {
        "summary": "List all books",
        "tags": ["Books"],
        "responses": {
          "200": {
            "description": "Array of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "author": {
                        "type": ["string", "null"]
                      },
                      "isbn": {
                        "type": ["string", "null"]
                      },
                      "publisher": {
                        "type": ["string", "null"]
                      },
                      "publishedYear": {
                        "type": ["integer", "null"]
                      },
                      "verified": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a book",
        "tags": ["Books"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  },
                  "isbn": {
                    "type": "string"
                  },
                  "publisher": {
                    "type": "string"
                  },
                  "publishedYear": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "author": {
                      "type": ["string", "null"]
                    },
                    "isbn": {
                      "type": ["string", "null"]
                    },
                    "publisher": {
                      "type": ["string", "null"]
                    },
                    "publishedYear": {
                      "type": ["integer", "null"]
                    },
                    "verified": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "books.errors.title_required"
          }
        }
      }
    },
    "/api/books/search": {
      "get": {
        "summary": "Search books via OpenLibrary",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "author": {
                        "type": ["string", "null"]
                      },
                      "isbn": {
                        "type": ["string", "null"]
                      },
                      "publisher": {
                        "type": ["string", "null"]
                      },
                      "publishedYear": {
                        "type": ["integer", "null"]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "books.errors.q_required"
          },
          "502": {
            "description": "books.errors.search_failed"
          }
        }
      }
    },
    "/api/books/{id}/verify": {
      "post": {
        "summary": "Verify a book",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "author": {
                      "type": ["string", "null"]
                    },
                    "isbn": {
                      "type": ["string", "null"]
                    },
                    "publisher": {
                      "type": ["string", "null"]
                    },
                    "publishedYear": {
                      "type": ["integer", "null"]
                    },
                    "verified": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "books.errors.not_found"
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}
